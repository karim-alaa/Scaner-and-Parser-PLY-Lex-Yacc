
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D6156EFB8A177B0117F9F6C3012FAE1A'
    
_lr_action_items = {'DIVIDE':([26,27,29,30,31,61,62,63,64,65,67,68,],[-47,41,-49,-46,-48,-45,-47,-49,-48,-44,41,41,]),'VARIABLE':([1,3,4,7,9,10,12,16,34,35,38,40,41,42,43,44,45,47,49,52,53,54,59,72,73,77,79,83,84,90,92,94,96,97,100,102,103,104,105,109,114,121,122,125,130,134,],[6,6,6,6,6,21,6,29,51,-35,57,57,63,63,6,63,63,-33,57,51,51,51,57,6,63,88,57,57,-32,-34,101,-21,-13,51,101,-20,118,101,101,6,63,57,-22,-12,101,-19,]),'FALSE':([103,],[116,]),'EQUALS':([6,51,101,],[16,73,114,]),'ARROW':([6,29,],[17,46,]),'DOUBLE_QUOTE':([16,32,36,48,55,73,114,],[32,-40,-40,70,-39,32,32,]),'CLOSE_CURLY_BRACE':([34,35,47,50,52,53,54,74,75,76,84,90,92,94,97,100,102,104,105,107,111,113,119,120,122,123,130,133,134,],[-18,-35,-33,72,-18,-18,-18,-17,-15,-14,-32,-34,-31,-21,-18,-31,-20,-31,-31,122,-16,-27,-26,-29,-22,-30,-31,-28,-19,]),'RETURN':([35,47,84,90,92,94,100,102,104,105,130,134,],[-35,-33,-32,-34,103,-21,103,-20,103,103,103,-19,]),'OPEN_CURLY_BRACE':([19,80,],[34,92,]),'DOT':([56,88,112,],[77,77,77,]),'CLASS':([1,3,4,7,9,12,35,43,47,72,84,90,94,96,109,122,125,],[8,8,8,8,8,8,-35,8,-33,8,-32,-34,-21,-13,8,-22,-12,]),'TRUE':([103,],[115,]),'MINUS':([26,27,28,29,30,31,61,62,63,64,65,67,68,87,127,],[-47,-43,45,-49,-46,-48,-45,-47,-49,-48,-44,-41,-42,45,45,]),'OPEN_BRACE':([23,26,33,39,69,106,],[38,40,49,59,83,121,]),'NEW':([16,],[25,]),'SEMICOLON':([21,26,27,28,29,30,31,56,61,62,63,64,65,67,68,70,78,82,85,87,88,93,98,108,110,112,115,116,118,126,127,131,132,],[35,-47,-43,43,-49,-46,47,-38,-45,-47,-49,-48,-44,-41,-42,84,90,94,96,97,-38,109,-37,123,125,-38,-52,-53,-50,-36,130,-51,134,]),'IDENTIFIER':([8,11,16,17,22,25,32,35,36,41,42,44,45,46,47,73,84,89,90,92,94,100,102,104,105,114,117,130,134,],[19,23,26,33,36,39,36,-35,36,62,62,62,62,69,-33,26,-32,36,-34,106,-21,106,-20,106,106,26,36,106,-19,]),'SINGLE_QUOTE':([10,22,36,37,55,77,89,99,103,117,128,],[22,-40,-40,56,-39,89,-40,112,117,-40,131,]),'TIMES':([26,27,29,30,31,61,62,63,64,65,67,68,],[-47,42,-49,-46,-48,-45,-47,-49,-48,-44,42,42,]),'$end':([0,2,15,],[-2,0,-1,]),'START_CODE':([0,],[1,]),'END_CODE':([1,3,4,5,7,9,12,13,14,18,20,24,35,43,47,66,72,84,86,90,94,96,109,122,124,125,],[-11,-11,-11,15,-11,-11,-11,-10,-9,-8,-6,-5,-35,-11,-33,-7,-11,-32,-3,-34,-21,-13,-11,-22,-4,-12,]),'COMMA':([57,],[79,]),'PLUS':([26,27,28,29,30,31,61,62,63,64,65,67,68,87,127,],[-47,-43,44,-49,-46,-48,-45,-47,-49,-48,-44,-41,-42,44,44,]),'CLOSE_BRACE':([38,40,49,57,58,59,60,71,79,81,83,91,95,121,129,],[-25,-25,-25,-24,80,-25,82,85,-25,93,-25,-23,110,-25,132,]),'FUNCTION':([1,3,4,7,9,12,34,35,43,47,52,53,54,72,84,90,94,96,97,109,122,125,],[11,11,11,11,11,11,11,-35,11,-33,11,11,11,11,-32,-34,-21,-13,11,11,-22,-12,]),'CONST':([16,41,42,44,45,73,114,],[31,64,64,64,64,31,31,]),'PRINT':([1,3,4,7,9,12,35,43,47,72,84,90,92,94,96,100,102,104,105,109,122,125,130,134,],[10,10,10,10,10,10,-35,10,-33,10,-32,-34,10,-21,-13,10,-20,10,10,10,-22,-12,10,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'CallClassFun':([1,3,4,7,9,12,43,72,109,],[3,3,3,3,3,3,3,3,3,]),'factor':([16,41,42,44,45,73,114,],[30,61,65,30,30,30,30,]),'ClassCode':([34,52,53,54,97,],[50,74,75,76,111,]),'string':([22,32,36,89,117,],[37,48,55,99,128,]),'term':([16,44,45,73,114,],[27,67,68,27,27,]),'print':([1,3,4,7,9,12,43,72,92,100,104,105,109,130,],[4,4,4,4,4,4,4,4,100,100,100,100,4,100,]),'InternalCode':([1,3,4,7,9,12,43,72,109,],[5,13,14,18,20,24,66,86,124,]),'parameter':([38,40,49,59,79,83,121,],[58,60,71,81,91,95,129,]),'PrintData':([56,88,112,],[78,98,126,]),'fun_code':([92,100,104,105,130,],[107,113,119,120,133,]),'StartCode':([0,],[2,]),'CallRetFun':([1,3,4,7,9,12,34,43,52,53,54,72,92,97,100,104,105,109,130,],[7,7,7,7,7,7,52,7,52,52,52,7,102,52,102,102,102,7,102,]),'expr':([16,73,114,],[28,87,127,]),'FunRet':([92,100,104,105,130,],[108,108,108,108,108,]),'dec_var':([1,3,4,7,9,12,34,43,52,53,54,72,92,97,100,104,105,109,130,],[12,12,12,12,12,12,54,12,54,54,54,12,104,54,104,104,104,12,104,]),'dec_fun':([1,3,4,7,9,12,34,43,52,53,54,72,97,109,],[9,9,9,9,9,9,53,9,53,53,53,9,53,9,]),'CallFun':([92,100,104,105,130,],[105,105,105,105,105,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> StartCode","S'",1,None,None,None),
  ('StartCode -> START_CODE InternalCode END_CODE','StartCode',3,'p_start_code','Editor.py',127),
  ('StartCode -> <empty>','StartCode',0,'p_start_code','Editor.py',128),
  ('InternalCode -> CLASS IDENTIFIER OPEN_CURLY_BRACE ClassCode CLOSE_CURLY_BRACE InternalCode','InternalCode',6,'p_create_class','Editor.py',130),
  ('InternalCode -> VARIABLE EQUALS NEW IDENTIFIER OPEN_BRACE parameter CLOSE_BRACE SEMICOLON InternalCode','InternalCode',9,'p_create_class','Editor.py',131),
  ('InternalCode -> dec_var InternalCode','InternalCode',2,'p_create_class','Editor.py',132),
  ('InternalCode -> dec_fun InternalCode','InternalCode',2,'p_create_class','Editor.py',133),
  ('InternalCode -> VARIABLE EQUALS expr SEMICOLON InternalCode','InternalCode',5,'p_create_class','Editor.py',134),
  ('InternalCode -> CallRetFun InternalCode','InternalCode',2,'p_create_class','Editor.py',135),
  ('InternalCode -> print InternalCode','InternalCode',2,'p_create_class','Editor.py',136),
  ('InternalCode -> CallClassFun InternalCode','InternalCode',2,'p_create_class','Editor.py',137),
  ('InternalCode -> <empty>','InternalCode',0,'p_create_class','Editor.py',138),
  ('CallClassFun -> VARIABLE EQUALS VARIABLE ARROW IDENTIFIER OPEN_BRACE parameter CLOSE_BRACE SEMICOLON','CallClassFun',9,'p_callclassfun','Editor.py',141),
  ('CallClassFun -> VARIABLE ARROW IDENTIFIER OPEN_BRACE parameter CLOSE_BRACE SEMICOLON','CallClassFun',7,'p_callclassfun','Editor.py',142),
  ('ClassCode -> dec_var ClassCode','ClassCode',2,'p_class_code_empty','Editor.py',145),
  ('ClassCode -> dec_fun ClassCode','ClassCode',2,'p_class_code_empty','Editor.py',146),
  ('ClassCode -> VARIABLE EQUALS expr SEMICOLON ClassCode','ClassCode',5,'p_class_code_empty','Editor.py',147),
  ('ClassCode -> CallRetFun ClassCode','ClassCode',2,'p_class_code_empty','Editor.py',148),
  ('ClassCode -> <empty>','ClassCode',0,'p_class_code_empty','Editor.py',149),
  ('CallFun -> IDENTIFIER OPEN_BRACE parameter CLOSE_BRACE SEMICOLON','CallFun',5,'p_classcode_callfun','Editor.py',152),
  ('CallFun -> CallRetFun','CallFun',1,'p_classcode_callfun','Editor.py',153),
  ('CallRetFun -> VARIABLE EQUALS IDENTIFIER OPEN_BRACE parameter CLOSE_BRACE SEMICOLON','CallRetFun',7,'p_classcode_callretfun','Editor.py',156),
  ('dec_fun -> FUNCTION IDENTIFIER OPEN_BRACE parameter CLOSE_BRACE OPEN_CURLY_BRACE fun_code CLOSE_CURLY_BRACE','dec_fun',8,'p_classcode_decfunp','Editor.py',159),
  ('parameter -> VARIABLE COMMA parameter','parameter',3,'p_classcode_multi_parameter','Editor.py',162),
  ('parameter -> VARIABLE','parameter',1,'p_classcode_multi_parameter','Editor.py',163),
  ('parameter -> <empty>','parameter',0,'p_classcode_multi_parameter','Editor.py',164),
  ('fun_code -> dec_var fun_code','fun_code',2,'p_classcode_funcodev','Editor.py',167),
  ('fun_code -> print fun_code','fun_code',2,'p_classcode_funcodev','Editor.py',168),
  ('fun_code -> VARIABLE EQUALS expr SEMICOLON fun_code','fun_code',5,'p_classcode_funcodev','Editor.py',169),
  ('fun_code -> CallFun fun_code','fun_code',2,'p_classcode_funcodev','Editor.py',170),
  ('fun_code -> FunRet SEMICOLON','fun_code',2,'p_classcode_funcodev','Editor.py',171),
  ('fun_code -> <empty>','fun_code',0,'p_classcode_funcodev','Editor.py',172),
  ('dec_var -> VARIABLE EQUALS DOUBLE_QUOTE string DOUBLE_QUOTE SEMICOLON','dec_var',6,'p_dec_var','Editor.py',175),
  ('dec_var -> VARIABLE EQUALS CONST SEMICOLON','dec_var',4,'p_dec_var','Editor.py',176),
  ('print -> PRINT SINGLE_QUOTE string SINGLE_QUOTE PrintData SEMICOLON','print',6,'p_classcode_print','Editor.py',179),
  ('print -> PRINT VARIABLE SEMICOLON','print',3,'p_classcode_print','Editor.py',180),
  ('PrintData -> DOT SINGLE_QUOTE string SINGLE_QUOTE PrintData','PrintData',5,'p_classcode_printdata','Editor.py',183),
  ('PrintData -> DOT VARIABLE PrintData','PrintData',3,'p_classcode_printdata','Editor.py',184),
  ('PrintData -> <empty>','PrintData',0,'p_classcode_printdata','Editor.py',185),
  ('string -> IDENTIFIER string','string',2,'p_classcode_string','Editor.py',188),
  ('string -> <empty>','string',0,'p_classcode_string','Editor.py',189),
  ('expr -> expr PLUS term','expr',3,'p_classcode_exprplus','Editor.py',192),
  ('expr -> expr MINUS term','expr',3,'p_classcode_exprplus','Editor.py',193),
  ('expr -> term','expr',1,'p_classcode_exprplus','Editor.py',194),
  ('term -> term TIMES factor','term',3,'p_classcode_termtimes','Editor.py',197),
  ('term -> term DIVIDE factor','term',3,'p_classcode_termtimes','Editor.py',198),
  ('term -> factor','term',1,'p_classcode_termtimes','Editor.py',199),
  ('factor -> IDENTIFIER','factor',1,'p_classcode_factorid','Editor.py',202),
  ('factor -> CONST','factor',1,'p_classcode_factorid','Editor.py',203),
  ('factor -> VARIABLE','factor',1,'p_classcode_factorid','Editor.py',204),
  ('FunRet -> RETURN VARIABLE','FunRet',2,'p_funcode_return','Editor.py',206),
  ('FunRet -> RETURN SINGLE_QUOTE string SINGLE_QUOTE','FunRet',4,'p_funcode_return','Editor.py',207),
  ('FunRet -> RETURN TRUE','FunRet',2,'p_funcode_return','Editor.py',208),
  ('FunRet -> RETURN FALSE','FunRet',2,'p_funcode_return','Editor.py',209),
]
